CREATE TABLE IF NOT EXISTS members(
member_id SERIAL PRIMARY KEY,
first_name VARCHAR(20),
last_name VARCHAR(20),
join_date DATE,
tickets_bought INTEGER,
status VARCHAR(20),
last_visit DATETIME,
points INTEGER
);

CREATE TABLE IF NOT EXISTS ticket_type(
tt_id SERIAL PRIMARY KEY,
ticket_name VARCHAR(40),
cost NUMERIC(4,2)
);

CREATE TABLE IF NOT EXISTS snack_bar(
snack_id SERIAL PRIMARY KEY,
snack_name VARCHAR(20),
inv_qty INTEGER,
restock_thresh INTEGER,
supplier VARCHAR(40),
last_ordered DATE,
price NUMERIC(5,2)
);

CREATE TABLE IF NOT EXISTS movies(
movie_id SERIAL PRIMARY KEY,
movie_title VARCHAR(30),
studio VARCHAR(20),
status VARCHAR(15),
release_date DATE,
expected_close DATE,
actual_close DATE,
tickets_sold INTEGER,
runtime INTEGER
);

CREATE TABLE IF NOT EXISTS screens(
screen_id SERIAL PRIMARY KEY,
room_name VARCHAR(20),
capacity INTEGER
);


CREATE TABLE IF NOT EXISTS screenings(
screening_id SERIAL PRIMARY KEY,
movie_id INTEGER,
 FOREIGN KEY(movie_id) REFERENCES movies(movie_id),
screen_id INTEGER,
 FOREIGN KEY(screen_id) REFERENCES screens(screen_id),
showtime INTEGER,
show_date DATE,
filled_seats INTEGER
);

CREATE TABLE IF NOT EXISTS snack_sales(
sale_id SERIAL PRIMARY KEY,
member_id INTEGER,
 FOREIGN KEY(member_id) REFERENCES members(member_id),
sale_total NUMERIC(5,2),
sale_at DATETIME
);


CREATE TABLE IF NOT EXISTS snack_details(
sale_id INTEGER,
 FOREIGN KEY(sale_id) REFERENCES snack_sales(sale_id),
snack_id INTEGER,
 FOREIGN KEY(snack_id) REFERENCES snack_bar(snack_id),
qty INTEGER
);

CREATE TABLE IF NOT EXISTS box_office(
order_id SERIAL PRIMARY KEY,
guest_status VARCHAR(),
member_id INTEGER,
 FOREIGN KEY(member_id) REFERENCES members(member_id),
ticket_qty INTEGER,
screening_id INTEGER,
 FOREIGN KEY(screening_id) REFERENCES screenings(screening_id),
tt_id INTEGER,
 FOREIGN KEY(tt_id) REFERENCES ticket_type(tt_id)
);